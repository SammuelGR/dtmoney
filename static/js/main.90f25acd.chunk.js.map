{"version":3,"sources":["assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","services/api.ts","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Summary","src","incomeImg","alt","outcomeImg","className","totalImg","api","axios","create","baseURL","TransactionsTable","useState","transactions","setTransactions","useEffect","get","then","response","data","map","transaction","title","type","Intl","NumberFormat","style","currency","format","amount","category","DateTimeFormat","Date","createdAt","id","main","Dashboard","header","Content","Header","onOpenNewTransactionModal","logoImg","onClick","form","TransactionTypeContainer","colors","green","red","RadioBox","button","isActive","activeColor","transparentize","darken","NewTransactionModal","isOpen","onRequestClose","setTitle","value","setValue","setCategory","setType","overlayClassName","closeImg","onSubmit","event","preventDefault","post","onChange","target","placeholder","Number","GlobalStyle","createGlobalStyle","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","models","Model","seeds","server","db","loadData","routes","this","namespace","schema","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f25acd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/income.6106d856.svg\";","export default __webpack_public_path__ + \"static/media/outcome.34032f7e.svg\";","export default __webpack_public_path__ + \"static/media/total.285fe24b.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 2rem;\r\n  margin-top: -10rem;\r\n\r\n  div {\r\n    background: var(--shape);\r\n    padding: 1.5rem 2rem;\r\n    border-radius: 0.25rem;\r\n    color: var(--text-title);\r\n\r\n    header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    strong {\r\n      display: block;\r\n      margin-top: 1rem;\r\n      font-size: 2rem;\r\n      font-weight: 500;\r\n      line-height: 3rem;\r\n    }\r\n\r\n    &.highlight-background {\r\n      background: var(--green);\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n","import incomeImg from \"../../assets/income.svg\";\r\nimport outcomeImg from \"../../assets/outcome.svg\";\r\nimport totalImg from \"../../assets/total.svg\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Summary() {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <header>\r\n          <p>Entradas</p>\r\n          <img src={incomeImg} alt=\"Entradas\" />\r\n        </header>\r\n\r\n        <strong>R$1000,00</strong>\r\n      </div>\r\n\r\n      <div>\r\n        <header>\r\n          <p>Saídas</p>\r\n          <img src={outcomeImg} alt=\"Saídas\" />\r\n        </header>\r\n\r\n        <strong>- R$500,00</strong>\r\n      </div>\r\n\r\n      <div className=\"highlight-background\">\r\n        <header>\r\n          <p>Total</p>\r\n          <img src={totalImg} alt=\"Total\" />\r\n        </header>\r\n\r\n        <strong>R$500,00</strong>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:3000/api\",\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n\r\n  table {\r\n    width: 100%;\r\n    border-spacing: 0 0.5rem;\r\n\r\n    th {\r\n      color: var(--text-body);\r\n      font-weight: 400;\r\n      padding: 1rem 2rem;\r\n      text-align: left;\r\n      line-height: 1.5rem;\r\n    }\r\n\r\n    td {\r\n      padding: 1rem 2rem;\r\n      border: 0;\r\n      background: var(--shape);\r\n      color: var(--text-body);\r\n      border-radius: 0.25rem;\r\n\r\n      &:first-child {\r\n        color: var(--text-title);\r\n      }\r\n\r\n      &.deposit {\r\n        color: var(--green);\r\n      }\r\n      &.withdraw {\r\n        color: var(--red);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { api } from \"../../services/api\";\r\nimport { Container } from \"./styles\";\r\n\r\ninterface Transaction {\r\n  id: number;\r\n  title: string;\r\n  amount: number;\r\n  type: string;\r\n  category: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport function TransactionsTable() {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get(\"transactions\").then((response) => setTransactions(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Título</th>\r\n            <th>Valor</th>\r\n            <th>Categoria</th>\r\n            <th>Data</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td>{transaction.title}</td>\r\n              <td className={transaction.type}>\r\n                {new Intl.NumberFormat(\"pt-BR\", {\r\n                  style: \"currency\",\r\n                  currency: \"BRL\",\r\n                }).format(transaction.amount)}\r\n              </td>\r\n              <td>{transaction.category}</td>\r\n              <td>\r\n                {new Intl.DateTimeFormat(\"pt-BR\").format(\r\n                  new Date(transaction.createdAt)\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.main`\r\n  max-width: 1120px;\r\n  margin: 0 auto;\r\n  padding: 2.5rem 1rem;\r\n`;\r\n","import { Summary } from \"../Summary\";\r\nimport { TransactionsTable } from \"../TransactionsTable\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Dashboard() {\r\n  return (\r\n    <Container>\r\n      <Summary />\r\n      <TransactionsTable />\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.b30f412f.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.header`\r\n  background: var(--blue);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  max-width: 1120px;\r\n  margin: 0 auto;\r\n\r\n  padding: 2rem 1rem 12rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  button {\r\n    font-size: 1rem;\r\n    color: #fff;\r\n    background: var(--blue-light);\r\n    border: 0;\r\n    padding: 0 2rem;\r\n    border-radius: 0.25rem;\r\n    height: 3rem;\r\n\r\n    transition: filter 0.2s;\r\n\r\n    &:hover {\r\n      filter: brightness(0.9);\r\n    }\r\n  }\r\n`;\r\n","import logoImg from \"../../assets/logo.svg\";\r\n\r\nimport { Container, Content } from \"./styles\";\r\n\r\ninterface HeaderProps {\r\n  onOpenNewTransactionModal: () => void;\r\n}\r\n\r\nexport function Header({ onOpenNewTransactionModal }: HeaderProps) {\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <img src={logoImg} alt=\"dt money\" />\r\n        <button type=\"button\" onClick={onOpenNewTransactionModal}>\r\n          Nova transação\r\n        </button>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.db04ce19.svg\";","import styled from \"styled-components\";\r\nimport { darken, transparentize } from \"polished\";\r\n\r\nexport const Container = styled.form`\r\n  h2 {\r\n    color: var(--text-title);\r\n    font-size: 1.5rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 0 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 0.25rem;\r\n\r\n    border: 1px solid #d7d7d7;\r\n    background: #e7e9ee;\r\n\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--text-body);\r\n    }\r\n\r\n    & + input {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n\r\n  button[type=\"submit\"] {\r\n    width: 100%;\r\n    padding: 0 1.5rem;\r\n    height: 4rem;\r\n    background: var(--green);\r\n    color: #fff;\r\n    border-radius: 0.25rem;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    margin-top: 1.5rem;\r\n    font-weight: 600;\r\n\r\n    transition: filter 0.2s;\r\n\r\n    &:hover {\r\n      filter: brightness(0.9);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransactionTypeContainer = styled.div`\r\n  margin: 1rem 0;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 0.5rem;\r\n`;\r\n\r\ninterface RadioBoxProps {\r\n  isActive: boolean;\r\n  activeColor: \"green\" | \"red\";\r\n}\r\n\r\nconst colors = {\r\n  green: \"#33cc95\",\r\n  red: \"#e52e4d\",\r\n};\r\n\r\nexport const RadioBox = styled.button<RadioBoxProps>`\r\n  height: 4rem;\r\n  border: 1px solid #d7d7d7;\r\n  border-radius: 0.25rem;\r\n\r\n  background: ${({ isActive, activeColor }) =>\r\n    isActive ? transparentize(0.9, colors[activeColor]) : \"transparent\"};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: border-color 0.2s;\r\n\r\n  &:hover {\r\n    border-color: ${darken(0.1, \"#d7d7d7\")};\r\n  }\r\n\r\n  img {\r\n    height: 20px;\r\n    width: 20px;\r\n  }\r\n\r\n  span {\r\n    display: inline-block;\r\n    margin-left: 1rem;\r\n    font-size: 1rem;\r\n    color: var(--text-title);\r\n  }\r\n`;\r\n","import { FormEvent, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { api } from \"../../services/api\";\r\n\r\nimport closeImg from \"../../assets/close.svg\";\r\nimport incomeImg from \"../../assets/income.svg\";\r\nimport outcomeImg from \"../../assets/outcome.svg\";\r\n\r\nimport { Container, TransactionTypeContainer, RadioBox } from \"./styles\";\r\n\r\ninterface NewTransactionModalProps {\r\n  isOpen: boolean;\r\n  onRequestClose: () => void;\r\n}\r\n\r\nexport function NewTransactionModal({\r\n  isOpen,\r\n  onRequestClose,\r\n}: NewTransactionModalProps) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [value, setValue] = useState(0);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [type, setType] = useState(\"deposit\");\r\n\r\n  function handleCreateNewTransaction(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      title,\r\n      value,\r\n      category,\r\n      type,\r\n    };\r\n\r\n    api.post(\"transactions\", data);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      overlayClassName=\"react-modal-overlay\"\r\n      className=\"react-modal-content\"\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        onClick={onRequestClose}\r\n        className=\"react-modal-close\"\r\n      >\r\n        <img src={closeImg} alt=\"Fechar modal\" />\r\n      </button>\r\n\r\n      <Container onSubmit={handleCreateNewTransaction}>\r\n        <h2>Cadastrar transação</h2>\r\n\r\n        <input\r\n          value={title}\r\n          onChange={(event) => setTitle(event.target.value)}\r\n          placeholder=\"Título\"\r\n        />\r\n\r\n        <input\r\n          value={value}\r\n          onChange={(event) => setValue(Number(event.target.value))}\r\n          type=\"number\"\r\n          placeholder=\"Valor\"\r\n        />\r\n\r\n        <TransactionTypeContainer>\r\n          <RadioBox\r\n            type=\"button\"\r\n            onClick={() => setType(\"deposit\")}\r\n            isActive={type === \"deposit\"}\r\n            activeColor=\"green\"\r\n          >\r\n            <img src={incomeImg} alt=\"Entrada\" />\r\n            <span>Entrada</span>\r\n          </RadioBox>\r\n\r\n          <RadioBox\r\n            type=\"button\"\r\n            onClick={() => setType(\"withdraw\")}\r\n            isActive={type === \"withdraw\"}\r\n            activeColor=\"red\"\r\n          >\r\n            <img src={outcomeImg} alt=\"Saída\" />\r\n            <span>Saída</span>\r\n          </RadioBox>\r\n        </TransactionTypeContainer>\r\n\r\n        <input\r\n          value={category}\r\n          onChange={(event) => setCategory(event.target.value)}\r\n          placeholder=\"Categoria\"\r\n        />\r\n\r\n        <button type=\"submit\">Cadastrar</button>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        --red: #e52e4d;\r\n        --blue: #5429cc;\r\n        --green: #33cc95;\r\n\r\n        --blue-light: #6933ff;\r\n\r\n        --text-title: #363f5f;\r\n        --text-body: #969cb3;\r\n\r\n        --background: #f0f2f5;\r\n        --shape: #ffffff;\r\n    }\r\n\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        @media (max-width: 1080px) {\r\n            font-size: 93.75%;\r\n        }\r\n        @media (max-width: 720px) {\r\n            font-size: 87.5%;\r\n        }\r\n    }\r\n\r\n    body {\r\n        background:var(--background);\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, textarea, button {\r\n        font-family: 'Poppins', sans-serif;\r\n        font-weight: 400;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong {\r\n        font-weight: 600;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n\r\n    [disabled] {\r\n        opacity: 0.6;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .react-modal-overlay {\r\n        background: rgba(0, 0, 0, 0.5);\r\n\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .react-modal-content {\r\n        width: 100%;\r\n        max-width: 576px;\r\n        background: var(--background);\r\n        padding: 3rem;\r\n        position: relative;\r\n        border-radius: 0.25rem;\r\n    }\r\n\r\n    .react-modal-close {\r\n        position: absolute;\r\n        right: 1.5rem;\r\n        top: 1.5rem;\r\n        border: 0;\r\n        background: transparent;\r\n\r\n        transition: filter 0.2s;\r\n\r\n        &:hover {\r\n            filter: brightness(0.8);\r\n        }\r\n    }\r\n`;\r\n","import { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { Dashboard } from \"./components/Dashboard\";\r\nimport { Header } from \"./components/Header\";\r\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\r\nimport { GlobalStyle } from \"./styles/global\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport function App() {\r\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] =\r\n    useState(false);\r\n\r\n  function handleOpenNewTransactionModal() {\r\n    setIsNewTransactionModalOpen(true);\r\n  }\r\n\r\n  function handleCloseNewTransactionModal() {\r\n    setIsNewTransactionModalOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\r\n\r\n      <Dashboard />\r\n\r\n      <NewTransactionModal\r\n        isOpen={isNewTransactionModalOpen}\r\n        onRequestClose={handleCloseNewTransactionModal}\r\n      />\r\n\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nimport { createServer, Model } from \"miragejs\";\r\n\r\ncreateServer({\r\n  models: {\r\n    transaction: Model,\r\n  },\r\n\r\n  seeds(server) {\r\n    server.db.loadData({\r\n      transactions: [\r\n        {\r\n          id: 1,\r\n          title: \"Freelance de website\",\r\n          type: \"deposit\",\r\n          category: \"Dev\",\r\n          amount: 6000,\r\n          createdAt: new Date(\"2021-02-12 09:00:00\"),\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Aluguel\",\r\n          type: \"withdraw\",\r\n          category: \"Casa\",\r\n          amount: 1100,\r\n          createdAt: new Date(\"2021-02-14 11:00:00\"),\r\n        },\r\n      ],\r\n    });\r\n  },\r\n\r\n  routes() {\r\n    this.namespace = \"api\";\r\n\r\n    this.get(\"/transactions\", (schema) => {\r\n      return schema.db.transactions;\r\n    });\r\n\r\n    this.post(\"/transactions\", (schema, request) => {\r\n      const data = JSON.parse(request.requestBody);\r\n\r\n      return schema.create(\"transaction\", data);\r\n    });\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}